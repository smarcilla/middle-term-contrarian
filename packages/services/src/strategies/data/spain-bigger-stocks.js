const companies = [
  { name: 'Industria de Diseno Textil, S.A.', code: 'ITX.MC' },
  { name: 'Iberdrola, S.A.', code: 'IBE.MC' },
  { name: 'Airbus SE', code: 'AIR.MC' },
  { name: 'Endesa, S.A.', code: 'ELE.MC' },
  { name: 'Telefonica, S.A.', code: 'TEF.MC' },
  { name: 'Cellnex Telecom, S.A.', code: 'CLNX.MC' },
  { name: 'Amadeus IT Group, S.A.', code: 'AMS.MC' },
  { name: 'Grifols, S.A.', code: 'GRF.MC' },
  { name: 'Aena S.M.E., S.A.', code: 'AENA.MC' },
  { name: 'Ferrovial, S.A.', code: 'FER.MC' },
  { name: 'Naturgy Energy Group, S.A.', code: 'NTGY.MC' },
  { name: 'Repsol, S.A.', code: 'REP.MC' },
  { name: 'ArcelorMittal', code: 'MTS.MC' },
  { name: 'Siemens Gamesa Renewable Energy, S.A.', code: 'SGRE.MC' },
  { name: 'Red Electrica Corporacion, S.A.', code: 'REE.MC' },
  {
    name: 'ACS, Actividades de Construccion y Servicios, S.A.',
    code: 'ACS.MC',
  },
  { name: 'Enagas, S.A.', code: 'ENG.MC' },
  { name: 'Acciona, S.A.', code: 'ANA.MC' },
  { name: 'Inmobiliaria Colonial, SOCIMI, S.A.', code: 'COL.MC' },
  { name: 'International Consolidated Airlines Group, S.A.', code: 'IAG.MC' },
];

console.info(
  companies.map(({ code }) => ({
    code,
    ev: 1000000,
    ebit: 1000000,
    currentAssets: 1000000,
    totalAssets: 1000000,
    currentLiabilities: 1000000,
    totalLiabilities: 1000000,
  })),
);

const finantials = [
  {
    code: 'ITX.MC',
    ev: 93.6 * 1000 * 1000000,
    ebit: 4770 * 1000000,
    currentAssets: 11414 * 1000000,
    totalAssets: 28391 * 1000000,
    currentLiabilities: 7306 * 1000000,
    totalLiabilities: 13442 * 1000000,
  },
  {
    code: 'IBE.MC',
    ev: 92.36 * 1000 * 1000000,
    ebit: 6154.512 * 1000000,
    currentAssets: 13557.693 * 1000000,
    totalAssets: 122369.006 * 1000000,
    currentLiabilities: 19131.242 * 1000000,
    totalLiabilities: 75174.341 * 1000000,
  },
  {
    code: 'AIR.MC',
    ev: 106.53 * 1000 * 1000000,
    ebit: 1022 * 1000000,
    currentAssets: 56723 * 1000000,
    totalAssets: 114409 * 1000000,
    currentLiabilities: 62374 * 1000000,
    totalLiabilities: 108419 * 1000000,
  },
  {
    code: 'ELE.MC',
    ev: 31.0 * 1000 * 1000000,
    ebit: 1724 * 1000000,
    currentAssets: 6100 * 1000000,
    totalAssets: 31981 * 1000000,
    currentLiabilities: 8465 * 1000000,
    totalLiabilities: 24144 * 1000000,
  },
  {
    code: 'TEF.MC',
    ev: 27.65 * 1000 * 1000000,
    ebit: 3641 * 1000000,
    currentAssets: 24328 * 1000000,
    totalAssets: 118877 * 1000000,
    currentLiabilities: 30191 * 1000000,
    totalLiabilities: 93427 * 1000000,
  },
  {
    code: 'CLNX.MC',
    ev: 18.18 * 1000 * 1000000,
    ebit: 142.627 * 1000000,
    currentAssets: 2720.886 * 1000000,
    totalAssets: 13001.129 * 1000000,
    currentLiabilities: 660.923 * 1000000,
    totalLiabilities: 7950.293 * 1000000,
  },
  {
    code: 'AMS.MC',
    ev: 34.57 * 1000 * 1000000,
    ebit: 1475.4 * 1000000,
    currentAssets: 1443.1 * 1000000,
    totalAssets: 10401.1 * 1000000,
    currentLiabilities: 2970.3 * 1000000,
    totalLiabilities: 6604 * 1000000,
  },
  {
    code: 'GRF.MC',
    ev: 34.57 * 1000 * 1000000,
    ebit: 1122.393 * 1000000,
    currentAssets: 5362.184 * 1000000,
    totalAssets: 15542.611 * 1000000,
    currentLiabilities: 1366.558 * 1000000,
    totalLiabilities: 8696.843 * 1000000,
  },
  {
    code: 'AENA.MC',
    ev: 32.28 * 1000 * 1000000,
    ebit: 2013.054 * 1000000,
    currentAssets: 752.742 * 1000000,
    totalAssets: 14890.543 * 1000000,
    currentLiabilities: 2080.515 * 1000000,
    totalLiabilities: 8508.667 * 1000000,
  },
  {
    code: 'FER.MC',
    ev: 24.83 * 1000 * 1000000,
    ebit: -59 * 1000000,
    currentAssets: 11751 * 1000000,
    totalAssets: 24109 * 1000000,
    currentLiabilities: 8621 * 1000000,
    totalLiabilities: 19022 * 1000000,
  },
  {
    code: 'NTGY.MC',
    ev: 36.57 * 1000 * 1000000,
    ebit: 3094 * 1000000,
    currentAssets: 8787 * 1000000,
    totalAssets: 41138 * 1000000,
    currentLiabilities: 6867 * 1000000,
    totalLiabilities: 27162 * 1000000,
  },
  {
    code: 'REP.MC',
    ev: 32.75 * 1000 * 1000000,
    ebit: 2124 * 1000000,
    currentAssets: 16487 * 1000000,
    totalAssets: 57895 * 1000000,
    currentLiabilities: 15085 * 1000000,
    totalLiabilities: 32686 * 1000000,
  },
  {
    code: 'MTS.MC',
    ev: 25.35 * 1000 * 1000000,
    ebit: -627 * 1000000,
    currentAssets: 28616 * 1000000,
    totalAssets: 87908 * 1000000,
    currentLiabilities: 21287 * 1000000,
    totalLiabilities: 47425 * 1000000,
  },
  {
    code: 'SGRE.MC',
    ev: 9.63 * 1000 * 1000000,
    ebit: 252.662 * 1000000,
    currentAssets: 7899.374 * 1000000,
    totalAssets: 16689.413 * 1000000,
    currentLiabilities: 7968.058 * 1000000,
    totalLiabilities: 10416.608 * 1000000,
  },
  {
    code: 'REE.MC',
    ev: 9.66 * 1000 * 1000000,
    ebit: 1075.007 * 1000000,
    currentAssets: 1786.808 * 1000000,
    totalAssets: 12661.96 * 1000000,
    currentLiabilities: 2272.175 * 1000000,
    totalLiabilities: 9047.526 * 1000000,
  },
  {
    code: 'ACS.MC',
    ev: 12.81 * 1000 * 1000000,
    ebit: 1577.212 * 1000000,
    currentAssets: 24242.973 * 1000000,
    totalAssets: 38591.726 * 1000000,
    currentLiabilities: 24054.824 * 1000000,
    totalLiabilities: 33095.82 * 1000000,
  },
  {
    code: 'ENG.MC',
    ev: 8.12 * 1000 * 1000000,
    ebit: 585.047 * 1000000,
    currentAssets: 1397.926 * 1000000,
    totalAssets: 8844.224 * 1000000,
    currentLiabilities: 470.213 * 1000000,
    totalLiabilities: 5675.375 * 1000000,
  },
  {
    code: 'ANA.MC',
    ev: 10.48 * 1000 * 1000000,
    ebit: 15.824 * 1000000,
    currentAssets: 6037.889 * 1000000,
    totalAssets: 17349.187 * 1000000,
    currentLiabilities: 6161.56 * 1000000,
    totalLiabilities: 13708.498 * 1000000,
  },
  {
    code: 'COL.MC',
    ev: 10.48 * 1000 * 1000000,
    ebit: 279.141 * 1000000,
    currentAssets: 568.162 * 1000000,
    totalAssets: 12501.511 * 1000000,
    currentLiabilities: 839.03 * 1000000,
    totalLiabilities: 5541.014 * 1000000,
  },
  {
    code: 'IAG.MC',
    ev: 19.35 * 1000 * 1000000,
    ebit: 2606 * 1000000,
    currentAssets: 11327 * 1000000,
    totalAssets: 35661 * 1000000,
    currentLiabilities: 12748 * 1000000,
    totalLiabilities: 28832 * 1000000,
  },
];

module.exports = {
  getStocks: () =>
    companies.map(({ name, code }) => ({
      name,
      stockCode: code,
      ...finantials.find(finc => finc.code === code),
    })),
};
